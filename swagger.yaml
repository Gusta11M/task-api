openapi: 3.0.0
info:
  title: Task API
  version: 1.0.0
  description: API for managing tasks with JWT authentication
servers:
  - url: http://localhost:5000/api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/UserResponse'

    UserResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string

    Task:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean
        user:
          type: string

    CreateTaskRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
        description:
          type: string

    UpdateTaskRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        completed:
          type: boolean

security:
  - bearerAuth: []

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: User already exists

  /auth/login:
    post:
      summary: Log in user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid credentials

  /tasks:
    get:
      summary: Get tasks of authenticated user
      tags: [Tasks]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of tasks
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
        '404':
          description: No tasks found
        '401':
          description: Unauthorized

    post:
      summary: Create a new task
      tags: [Tasks]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
      responses:
        '201':
          description: Task successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  task:
                    $ref: '#/components/schemas/Task'
        '401':
          description: Unauthorized

  /tasks/{id}:
    put:
      summary: Update a task
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  task:
                    $ref: '#/components/schemas/Task'
        '403':
          description: Not authorized
        '404':
          description: Task not found

    delete:
      summary: Delete a task
      tags: [Tasks]
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Not authorized
        '404':
          description: Task not found
